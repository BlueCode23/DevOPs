---

- name: Edit gitlab config 1
  become: true
  shell: >
    sed -i "s\external_url 'http://gitlab.example.com'\external_url 'http://192.168.60.0/gitlab'\g" /etc/gitlab/gitlab.rb
- name: Edit gitlab config 2
  become: true
  shell: sed -i 's/# unicorn\['\''port'\''\] = 8080/unicorn\['\''port'\''\] = 8088/' /etc/gitlab/gitlab.rb
- name: Edit gitlab config 3
  become: true
  shell: >
    sed -i 's/# gitlab_rails\['\''initial_root_password'\''\] = "password"/gitlab_rails['\''initial_root_password'\''\] = "aaaaaaaa"/g' /etc/gitlab/gitlab.rb
- name: Restart gitlab 1
  become: true
  shell: sudo gitlab-ctl reconfigure
- name: Restart gitlab 2
  become: true
  shell: sudo gitlab-ctl restart unicorn
- name: Restart gitlab 3
  become: true
  shell: sudo gitlab-ctl restart
- name: Create docker username
  shell: |
    usermod -aG docker vagrant
- name: Generate accesstoken
  become: true
  shell: |
    sudo bash admin_token.sh > outputofadmin
- name: Generate the repository on github
  shell: |
    curl  --request POST --header "PRIVATE-TOKEN: $(find  -type f -name 'admin-access-token.txt' -exec cat {} \;)" --header "Content-Type: application/json" --data '{"name": "new_project"}' --url "http://192.168.60.0/gitlab/api/v4/projects/"
- name: Clone the repo
  shell: |
    git clone https://github.com/BlueCode23/DevOPs.git
- name: Create the repository
  shell: |
    mkdir project
    rsync -a  Devops/ project/
    cd project
    git init
    echo "bin" >> .gitignore
    git add .
    git config --global user.name "vagrant"
    git commit -m "inital commit"
    git remote add origin http://192.168.60.0/gitlab/root/project.git

- name: Install gitrunner
  become: true
  shell: |
    curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bash
    apt-get install gitlab-runner

- name: create the runner
  become: true
  shell: |
    gitlab-runner register --non-interactive --url "http://192.168.60.0/gitlab" --token "$(sudo gitlab-rails runner -e production \"puts Gitlab::CurrentSettings.current_application_settings.runners_registration_token\" --description \"docker\" --tag-list "docker" --executor \"docker\" --docker-image alpine:latest --run-untagged=\"true\""

- name: create the testcase
  shell: |
    cd HelloWorldMaven
    .gitlab-ci.yml
